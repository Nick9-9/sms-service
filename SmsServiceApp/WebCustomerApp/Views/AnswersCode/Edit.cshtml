@using Model.ViewModels.AnswersCodeViewModels;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model AnswersCodeViewModel;
@{
    ViewData["Title"] = Localizer["Edit"];
}

<!DOCTYPE html>
<html>
<head>
    <title>@Localizer["Edit"]</title>
</head>
<body>
    <div class="container">
        <h2>@Localizer["Edit"]</h2>
        <h4>@Localizer["Answer's Code"]</h4>
        <hr />
        <div class="row">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="col-md-5">
                    <input type="hidden" asp-for="Id" />
                    <div class="form-group">
                        <label asp-for="Code" class="control-label"></label>
                        <input asp-for="Code" class="form-control" readonly />
                        <span asp-validation-for="Code" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Answer" class="control-label"></label>
                        <input asp-for="Answer" class="form-control" />
                        <span asp-validation-for="Answer" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="@Localizer["Edit"]" class="btn btn-warning" />
                    </div>
                </div>
            </form>
        </div>

    <div>
        <a class="btn btn-primary" asp-action="Index" asp-route-companyId="@Model.CompanyId">@Localizer["Back to List"]</a>
    </div>
    </div>
</body>
</html>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
