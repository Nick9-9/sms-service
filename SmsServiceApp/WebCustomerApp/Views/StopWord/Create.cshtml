@using Model.ViewModels.StopWordViewModels;
@model StopWordViewModel
@{
    ViewData["Title"] = "Edit";
}
<html>
<head>
    <title>Contact List</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>

    <script>


        function onAddWord() {
            var stModel = {};
            stModel.Word = $("#word").val();
            $.ajax(
                {
                    url: '/StopWord/Create',
                    type: 'POST',
                    data: stModel
                });
        }



    </script>
</head>
<body>
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
              
                <div class="form-group">
                    <label asp-for="Word" class="control-label"></label>
                    <input asp-for="Word" class="form-control" />
                    <span asp-validation-for="Word" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </form>
        </div>
    </div>
    <div>
    
        <a class="btn btn-default" asp-action="Index">Back to List</a>
    </div>
</body>

</html>

@section Scripts
    {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
